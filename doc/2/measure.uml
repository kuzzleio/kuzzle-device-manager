@startuml
start
:payload;
:decoder;
split
  :Historize payload `device-manager`;
  detach
split again
  :Produce `Measurement` array in a `decodedPayload` with:
  - type
  - values
  - measuredAt
  - deviceMeasureName;
end split

if (device exist) then (yes)
else (no)
    if (provision device setting is true) then (yes)
        :Create the unattached and unlinked device;
    else (no)
        stop
    endif
endif

:Create `Measure` from the `Measurement` array adding:
- unit
- origin:
  - type: 'device'
  - deviceModel: '<model of the device>'
  - id: '<id of the device>'
- ...;

:Save to device once fully enriched;

if (device attached to engine) then (yes)
    :Historize measures in the engine once fully enriched;
endif

if (device linked to an asset) then (yes)
  :Add to measure:
  - origin:
    - assetId: '<id of linked asset>';

    if (`deviceMeasureName` specified in the `deviceLink` of the asset) then (yes)
        :Enrich the measure with:
        - assetMeasureName: '<name specified in the deviceLink>';
        :Update asset measures' with the new measure;
    endif
endif
stop
@enduml
